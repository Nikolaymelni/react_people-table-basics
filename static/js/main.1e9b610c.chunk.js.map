{"version":3,"sources":["components/NavigationLink/NavigationLink.tsx","components/Navigation/Navigation.tsx","components/Pages/Home.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleList/PeopleList.tsx","components/Pages/People.tsx","components/Pages/NotFound.tsx","App.tsx","index.tsx"],"names":["NavigationLink","to","title","className","isActive","cn","Navigation","role","Home","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","sex","slug","isWoman","classNames","PersonInfo","born","died","fatherName","motherName","mother","father","isPersonSelected","useParams","personSlug","PeopleList","people","findPersonByName","persons","find","map","personsParents","People","useState","setPeople","isLoading","setIsLoading","isError","setIsError","isPeopleListEmpty","length","useEffect","catch","finally","NotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1e9b610c.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  title: string;\n}\n\nexport const NavigationLink: React.FC<Props> = ({ to, title }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => cn(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { NavigationLink } from '../NavigationLink/NavigationLink';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavigationLink to=\"/\" title=\"Home\" />\n          <NavigationLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const Home = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  const isWoman = sex === 'f';\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': isWoman,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n  const isPersonSelected = personSlug === slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        {\n          'has-background-warning': isPersonSelected,\n        },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types/Person';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const findPersonByName = (persons: Person[], name: string | null) => (\n    persons.find(person => person.name === name)\n  );\n\n  return (\n    <tbody>\n      {people.map((person) => {\n        const {\n          slug,\n          motherName,\n          fatherName,\n        } = person;\n        const mother = findPersonByName(people, motherName);\n        const father = findPersonByName(people, fatherName);\n\n        const personsParents = {\n          ...person,\n          mother,\n          father,\n        };\n\n        return (\n          <PersonInfo\n            person={personsParents}\n            key={slug}\n          />\n        );\n      })}\n    </tbody>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader/Loader';\nimport { PeopleList } from '../PeopleList/PeopleList';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isPeopleListEmpty = people.length === 0;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((persons) => setPeople(persons))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading\n              && <Loader />}\n\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {!isLoading && isPeopleListEmpty && (\n              <p data-cy=\"noPeopleMessage\">\n                No data\n              </p>\n            )}\n\n            {!isPeopleListEmpty && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <PeopleList people={people} />\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const NotFound = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { Home } from './components/Pages/Home';\nimport { People } from './components/Pages/People';\nimport { NotFound } from './components/Pages/NotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <div className=\"section\">\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/people\">\n          <Route index element={<People />} />\n          <Route path=\":personSlug\" element={<People />} />\n        </Route>\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </div>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}